You've built an inflight entertainment system with on-demand movie streaming.

Users on longer flights like to start a second movie right when their first one ends, but they complain that the plane usually lands before they can see the ending. So you're building a feature for choosing two movies whose total runtimes will equal the exact flight length.

Write a function that takes an integer flight_length (in minutes) and a list of integers movie_lengths (in minutes) and returns a boolean indicating whether there are two numbers in movie_lengths whose sum equals flight_length.

When building your function:

Assume your users will watch exactly two movies
Don't make your users watch the same movie twice
Optimize for runtime over memory


Solución:
Para esta kata es necesario buscar una película que se adapte sumandolas a la duración total del vuelo, por que con la duración de la primer película necesitamos encontrar una segunda que complemente el tiempo de la primera.
Este algoritmo puede realizarse por medio de fuerza bruta haciendo una funcion que revise el tiempo del de la segunda película menos el tiempo de la primer película y que estos dos sean igual al tiempo total del vuelo

contemplando eso como primera solución es muy complcado ya que usa mucha memoria y es muy difícil en caso de que haya muchas películas en seleccieon y ese o es la mejor solución.



