You've built an inflight entertainment system with on-demand movie streaming.

Users on longer flights like to start a second movie right when their first one ends, but they complain that the plane usually lands before they can see the ending. So you're building a feature for choosing two movies whose total runtimes will equal the exact flight length.

Write a function that takes an integer flight_length (in minutes) and a list of integers movie_lengths (in minutes) and returns a boolean indicating whether there are two numbers in movie_lengths whose sum equals flight_length.

When building your function:

Assume your users will watch exactly two movies
Don't make your users watch the same movie twice
Optimize for runtime over memory


Solución:

Una manera facil o mas bien directa es un arreglo que recorra todos los datos y que con eso puedan sumar el tiempo de vuelo exacto, sin embargo el proceso de ese metodo se complica en dado caso que la lista de peliculas sea demasiado larga.
Otra manera es hacer una funcion que pueda ordenar el tamaño de las películas y solo con esa buscar una película que acomplete el tiempo estimado y así la busqueda se reduce bastante.

La opción mas compleja es un algoritmo de fuerza bruta que agarre el tiempo de las películas y vaya haciendo combinación por combinaciónhasta encontrar el tiempo exacto y así llenar el tiempo total de vuelo